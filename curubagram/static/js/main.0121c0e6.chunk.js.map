{"version":3,"sources":["components/document/img/feather.png","components/document/img/tick.png","components/document/DocumentContent.js","components/common/API.js","components/document/DocumentCorrection.js","components/document/DocumentPage.js","serviceWorker.js","index.js"],"names":["module","exports","DocumentContent","props","handleTextChange","e","text","target","textContent","onTextChange","handlePlaceholderVisibility","visibility","onPlaceholderChange","state","prevProps","prevState","contentBox","document","getElementById","focus","textLength","this","length","console","log","textNode","firstChild","range","createRange","setStart","setEnd","sel","window","getSelection","removeAllRanges","addRange","placeholder","showPlaceholder","className","id","contentEditable","spellCheck","onInput","React","Component","axios","create","baseURL","responseType","CorrectionPlaceholder","src","ImgFeather","alt","href","title","rel","NoErrorsPlaceholder","ImgCheck","CorrectionCard","logEvent","event_type","originalWord","suggestion","API","post","original_text","handleCardDismiss","onWordsIgnoredChange","handleAcceptSuggestion","onAcceptSuggestion","handleAddWordToDict","icon","faArrowRight","onClick","faBookMedical","faTrashAlt","DocumentCorrection","word","replace","content","corrections","orginalWords","Object","keys","map","item","DocumentPage","setState","filterCorrections","words_ignored","new_corrections","forEach","key","indexOf","handleCorrections","handleWordsIgnored","new_word","push","bind","lastChar","test","spell_problems","dir","onCorrectionChange","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0121c0e6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/feather.b7a1b523.png\";","module.exports = __webpack_public_path__ + \"static/media/tick.14662814.png\";","import React from 'react'\nimport './DocumentContent.css'\n\nclass DocumentContent extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {}\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        var contentBox = document.getElementById(\"content-box\")\n        contentBox.focus()\n        const textLength = this.props.text.length\n        console.log('Text Length: ' + textLength)\n\n        if (textLength > 0){\n            var textNode = contentBox.firstChild\n            var range = document.createRange()\n            range.setStart(textNode, textLength)\n            range.setEnd(textNode, textLength)\n            var sel = window.getSelection()\n            sel.removeAllRanges()\n            sel.addRange(range)\n        }\n    }\n\n    handleTextChange = (e) => {\n        const text = e.target.textContent\n        this.props.onTextChange(text)\n        this.handlePlaceholderVisibility(text)\n    }\n\n    handlePlaceholderVisibility = (text) => {\n        let visibility = false\n        if (text === '') {\n            visibility = true\n        }\n        this.props.onPlaceholderChange(visibility)\n    }\n\n    render() {\n        const showPlaceholder = this.props.showPlaceholder\n        const text = this.props.text\n        let placeholder\n        if (showPlaceholder) {\n            placeholder = <p className='document-content-placeholder' >Escribe o pega (Windows/Linux: Ctrl+V. macOS: cmd+V) tu texto aquí.</p>\n        } else {\n            placeholder = <p className='document-content-placeholder' ></p>\n        }\n        return (\n            <div className='document-content-full-height'>\n                {placeholder}\n                <div\n                    id='content-box'\n                    className='document-content-bg'\n                    contentEditable='true'\n                    spellCheck='false'\n                    onInput={this.handleTextChange}>\n                    {text}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default DocumentContent;\n","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"http://127.0.0.1:8000/\", // \"http://52.27.16.14:5000/\",\n  responseType: \"json\"\n});\n","import React from 'react'\nimport ImgFeather from './img/feather.png'\nimport ImgCheck from './img/tick.png'\nimport './DocumentCorrection.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowRight, faBookMedical, faTrashAlt } from '@fortawesome/free-solid-svg-icons'\nimport API from '../common/API'\n\nclass CorrectionPlaceholder extends React.Component {\n    render() {\n        return (\n            <div className='dc-placeholder-container'>\n                <img src={ImgFeather} className='dc-placeholder-img' alt='Feather'/>\n                <div className='dc-placeholder-title'>Nada para corregir aún</div>\n                <div className='text-center'>\n                    Escribe algo para recibir retroalimentación de Curubagram.\n                </div>\n                <div className='dc-placeholder-ref'>Icons made by <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\" target='_blank' rel=\"noopener noreferrer\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\" target='_blank' rel=\"noopener noreferrer\">www.flaticon.com</a></div>\n            </div>\n        )\n    }\n}\n\nclass NoErrorsPlaceholder extends React.Component {\n    render() {\n        return (\n            <div className='dc-placeholder-container'>\n                <img src={ImgCheck} className='dc-placeholder-img' alt='Feather'/>\n                <div className='dc-placeholder-title'>No se encontraron problemas</div>\n                <div className='text-center'>\n                    No encontramos errores en tu texto. Verifica de nuevo cuando\n                    estés listo para escribir algo más.\n                </div>\n                <div className='dc-placeholder-ref'>Icons made by <a href=\"https://www.flaticon.com/authors/kiranshastry\" title=\"Kiranshastry\" target='_blank' rel=\"noopener noreferrer\">Kiranshastry</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\" target='_blank' rel=\"noopener noreferrer\">www.flaticon.com</a></div>\n            </div>\n        )\n    }\n}\n\nclass CorrectionCard extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {}\n    }\n\n    logEvent = (event_type) => {\n        const originalWord = this.props.originalWord\n        const suggestion = this.props.suggestion\n        API.post('/log_event', {\n            original_text: originalWord,\n            suggestion: suggestion,\n            event_type: event_type\n        })\n    }\n\n    handleCardDismiss = () => {\n        const originalWord = this.props.originalWord\n        this.props.onWordsIgnoredChange(originalWord)\n        this.logEvent('card_dismiss')\n    }\n\n    handleAcceptSuggestion = () => {\n        const originalWord = this.props.originalWord\n        const suggestion = this.props.suggestion\n        this.props.onAcceptSuggestion(originalWord, suggestion)\n        this.logEvent('card_accept_suggestion')\n    }\n\n    handleAddWordToDict = () => {\n        const originalWord = this.props.originalWord\n        this.props.onWordsIgnoredChange(originalWord)\n        this.logEvent('card_add_to_dict')\n    }\n\n    render() {\n        const originalWord = this.props.originalWord\n        const suggestion = this.props.suggestion\n        return (\n            <div className='card-bg'>\n                <div>\n                    <span className='card-original-word'>\n                        <span>{originalWord}</span>\n                    </span>\n                    <FontAwesomeIcon icon={faArrowRight} className='card-arrow' />\n                    <span className='card-suggestion' onClick={this.handleAcceptSuggestion}>{suggestion}</span>\n                </div>\n                <div className='card-description'>\n                    La palabra <strong>{originalWord}</strong> no está en nuestro diccionario. Si estás seguro\n                    que la palabra está bien escrita, la puedes agregar a tu diccionario\n                    personal y así evitar futuras correcciones equivocadas.\n                </div>\n                <div>\n                    <span className='card-add-dictionary' onClick={this.handleAddWordToDict}>\n                        <FontAwesomeIcon icon={faBookMedical} className='card-add-dictionary-icon' />\n                        Agregar al diccionario\n                    </span>\n                    <span className='card-discard' onClick={this.handleCardDismiss}>\n                        <FontAwesomeIcon icon={faTrashAlt} />\n                    </span>\n                </div>\n            </div>\n        )\n    }\n}\n\nclass DocumentCorrection extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {}\n    }\n\n    handleCardDismiss = (word) => {\n        this.props.onWordsIgnoredChange(word)\n    }\n\n    handleAcceptSuggestion = (originalWord, suggestion) => {\n        let text = this.props.text\n        text = text.replace(originalWord, suggestion)\n        this.props.onTextChange(text)\n    }\n\n    render() {\n        const showPlaceholder = this.props.showPlaceholder\n        const corrections = this.props.corrections\n        const orginalWords = Object.keys(corrections)\n        console.log(corrections)\n        let content\n        if (showPlaceholder) {\n            content = <CorrectionPlaceholder />\n        } else if (orginalWords.length > 0){\n            content = orginalWords.map((item) =>\n                <CorrectionCard\n                  originalWord={item}\n                  suggestion={corrections[item]}\n                  onWordsIgnoredChange={this.handleCardDismiss}\n                  onAcceptSuggestion={this.handleAcceptSuggestion}\n                  />\n            )\n        } else {\n            content = <NoErrorsPlaceholder />\n        }\n        return (\n            <div className='dc-bg'>\n                {content}\n            </div>\n        )\n    }\n}\n\nexport default DocumentCorrection;\n","import React from 'react'\nimport './DocumentPage.css'\nimport DocumentContent from './DocumentContent'\nimport DocumentCorrection from './DocumentCorrection'\nimport API from '../common/API'\n\nclass DocumentPage extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            corrections: {},\n            showPlaceholder: true,\n            words_ignored: [],\n            text: ''\n        }\n        this.handleTextChange = this.handleTextChange.bind(this)\n    }\n\n    handlePlaceholderVisibility = (visibility) => {\n        this.setState({\n            showPlaceholder: visibility\n        })\n    }\n\n    async handleTextChange(text) {\n        this.setState({\n            text: text\n        })\n        var lastChar = text[text.length -1]\n        // Only correct when the user writes a whitespace\n        if (/\\s/.test(lastChar)) {\n            let corrections = await API.post('/get_corrections', { text: text })\n            let spell_problems = corrections['data']['spell_problems']\n            this.handleCorrections(spell_problems)\n        }\n    }\n\n    filterCorrections = (corrections, words_ignored) => {\n        let new_corrections = {}\n        Object.keys(corrections).forEach(function(key) {\n            if ((words_ignored.indexOf(key) === -1)) {\n                new_corrections[key] = corrections[key]\n            }\n        })\n        return new_corrections\n    }\n\n    handleCorrections = (corrections) => {\n        let new_corrections = this.filterCorrections(corrections, this.state.words_ignored)\n        this.setState({\n            corrections: new_corrections\n        })\n    }\n\n    handleWordsIgnored = (new_word) => {\n        let words_ignored = this.state.words_ignored\n        words_ignored.push(new_word)\n        let new_corrections = this.filterCorrections(this.state.corrections, words_ignored)\n        this.setState({\n            corrections: new_corrections,\n            words_ignored: words_ignored\n        })\n    }\n\n    render() {\n        let corrections = this.state.corrections\n        let showPlaceholder = this.state.showPlaceholder\n        let text = this.state.text\n        console.dir(this.state)\n\n        return (\n            <div className='container-fluid full-height'>\n                <div className='row full-height'>\n                    <div className='col-sm-8 full-height'>\n                        <div className='main-box'>\n                            <div className='main-box-title'>\n                                CURUBAGRAM\n                            </div>\n                            <div>\n                                Corrige tus errores ortográficos, de gramatica y de puntuación.\n                            </div>\n                        </div>\n                        <DocumentContent\n                          showPlaceholder={showPlaceholder}\n                          onCorrectionChange={this.handleCorrections}\n                          onPlaceholderChange={this.handlePlaceholderVisibility}\n                          onTextChange={this.handleTextChange}\n                          text={text}/>\n                    </div>\n                    <div className='col-sm-4 full-height'>\n                        <DocumentCorrection\n                          showPlaceholder={showPlaceholder}\n                          corrections={corrections}\n                          text={text}\n                          onWordsIgnoredChange={this.handleWordsIgnored}\n                          onTextChange={this.handleTextChange}/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default DocumentPage\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './index.css';\nimport DocumentPage from './components/document/DocumentPage';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <DocumentPage />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}